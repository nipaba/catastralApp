/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cz.pv168Web.gui;

import cz.pv168Web.model.Ownership;

import javax.swing.DefaultComboBoxModel;
/**
 *
 * @author Tomas
 */
public class OwnershipInput extends javax.swing.JDialog {


    private boolean valid = false;
    private boolean update = false;
    private Ownership ownership;

    /**
     * Creates new form PersonInput
     */
    public OwnershipInput(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
         

    }

    public OwnershipInput(java.awt.Frame parent, boolean modal, String [] personArrayID, String [] landArrayId) {
        super(parent, modal);
        initComponents();
        update = true;
        comboboxPerson.setModel(new DefaultComboBoxModel(personArrayID));
        comboboxLand.setModel(new DefaultComboBoxModel(landArrayId));
    }
    
    public OwnershipInput(java.awt.Frame parent, boolean modal, String [] personArrayID, String [] landArrayId,Ownership o) {
        super(parent, modal);
        initComponents();
        update = true;
        comboboxPerson.setModel(new DefaultComboBoxModel(personArrayID));
        comboboxLand.setModel(new DefaultComboBoxModel(landArrayId));
    }
    public boolean getValid(){
        return valid;
    }
    
    public Ownership getOwnership(){
        return ownership;
    } 
 
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonCancel = new javax.swing.JButton();
        buttonAdd = new javax.swing.JButton();
        datePickerEndDate = new org.jdesktop.swingx.JXDatePicker();
        labelName = new javax.swing.JLabel();
        labelSurname = new javax.swing.JLabel();
        labelTitleNewPerson = new javax.swing.JLabel();
        labelStartDate = new javax.swing.JLabel();
        labelErrorLandID = new javax.swing.JLabel();
        labelErrorPersonID = new javax.swing.JLabel();
        labelErrorEndDate = new javax.swing.JLabel();
        labelEndDate = new javax.swing.JLabel();
        datePickerStartDate = new org.jdesktop.swingx.JXDatePicker();
        labelErrorStartDate = new javax.swing.JLabel();
        comboboxPerson = new javax.swing.JComboBox();
        comboboxLand = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("cz/pv168Web/gui/OwnershpInput"); // NOI18N
        buttonCancel.setText(bundle.getString("OwnershipInput.buttonCancel.text")); // NOI18N
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 3;
        gridBagConstraints.insets = new java.awt.Insets(18, 0, 0, 0);
        getContentPane().add(buttonCancel, gridBagConstraints);

        buttonAdd.setText(bundle.getString("OwnershipInput.buttonAdd.text")); // NOI18N
        buttonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 3;
        gridBagConstraints.insets = new java.awt.Insets(18, 0, 0, 0);
        getContentPane().add(buttonAdd, gridBagConstraints);

        datePickerEndDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                datePickerEndDateFocusGained(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        getContentPane().add(datePickerEndDate, gridBagConstraints);

        labelName.setText(bundle.getString("OwnershipInput.labelName.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 18;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        getContentPane().add(labelName, gridBagConstraints);

        labelSurname.setText(bundle.getString("OwnershipInput.labelSurname.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 18;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        getContentPane().add(labelSurname, gridBagConstraints);

        labelTitleNewPerson.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        labelTitleNewPerson.setText(bundle.getString("OwnershipInput.labelTitleNewPerson.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(labelTitleNewPerson, gridBagConstraints);

        labelStartDate.setText(bundle.getString("OwnershipInput.labelStartDate.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 33, 0, 33);
        getContentPane().add(labelStartDate, gridBagConstraints);

        labelErrorLandID.setText(bundle.getString("OwnershipInput.labelErrorLandID.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        getContentPane().add(labelErrorLandID, gridBagConstraints);

        labelErrorPersonID.setText(bundle.getString("OwnershipInput.labelErrorPersonID.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        getContentPane().add(labelErrorPersonID, gridBagConstraints);

        labelErrorEndDate.setText(bundle.getString("OwnershipInput.labelErrorEndDate.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 2;
        getContentPane().add(labelErrorEndDate, gridBagConstraints);

        labelEndDate.setText(bundle.getString("OwnershipInput.labelEndDate.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        getContentPane().add(labelEndDate, gridBagConstraints);

        datePickerStartDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                datePickerStartDateFocusGained(evt);
            }
        });
        datePickerStartDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datePickerStartDateActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        getContentPane().add(datePickerStartDate, gridBagConstraints);

        labelErrorStartDate.setText(bundle.getString("OwnershipInput.labelErrorStartDate.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 0);
        getContentPane().add(labelErrorStartDate, gridBagConstraints);

        comboboxPerson.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        getContentPane().add(comboboxPerson, gridBagConstraints);

        comboboxLand.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        getContentPane().add(comboboxLand, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
        valid = false;
        hide();

    }//GEN-LAST:event_buttonCancelActionPerformed

    private void buttonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddActionPerformed
        if(valideteOwnershipForm()){

            ownership = new Ownership();

            ownership.setPersonID(Long.parseLong((String) comboboxPerson.getSelectedItem()));
            ownership.setLandId(Long.parseLong((String) comboboxLand.getSelectedItem()));
            ownership.setStartDate(datePickerStartDate.getDate());
            ownership.setEndDate(datePickerEndDate.getDate());
            
            valid = true;
            this.hide();
        }
    }//GEN-LAST:event_buttonAddActionPerformed

    private void datePickerEndDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_datePickerEndDateFocusGained
      labelErrorEndDate.setVisible(false);
    }//GEN-LAST:event_datePickerEndDateFocusGained

    private void datePickerStartDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_datePickerStartDateFocusGained
        labelErrorStartDate.setVisible(false);
    }//GEN-LAST:event_datePickerStartDateFocusGained

    private void datePickerStartDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datePickerStartDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_datePickerStartDateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PersonInput.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PersonInput.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PersonInput.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PersonInput.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                OwnershipInput dialog = new OwnershipInput(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAdd;
    private javax.swing.JButton buttonCancel;
    private javax.swing.JComboBox comboboxLand;
    private javax.swing.JComboBox comboboxPerson;
    private org.jdesktop.swingx.JXDatePicker datePickerEndDate;
    private org.jdesktop.swingx.JXDatePicker datePickerStartDate;
    private javax.swing.JLabel labelEndDate;
    private javax.swing.JLabel labelErrorEndDate;
    private javax.swing.JLabel labelErrorLandID;
    private javax.swing.JLabel labelErrorPersonID;
    private javax.swing.JLabel labelErrorStartDate;
    private javax.swing.JLabel labelName;
    private javax.swing.JLabel labelStartDate;
    private javax.swing.JLabel labelSurname;
    private javax.swing.JLabel labelTitleNewPerson;
    // End of variables declaration//GEN-END:variables
    
    private Boolean valideteOwnershipForm(){
        Boolean tmp = true;
        if(datePickerStartDate.getDate() == null){
            labelErrorStartDate.setVisible(true);
            tmp =  false;
        }
        
        if(datePickerEndDate.getDate() != null  && datePickerStartDate.getDate().after(datePickerEndDate.getDate())){
            
            labelErrorStartDate.setVisible(true);
            tmp = false;
        }
        
        return tmp;
    }
}
